{
	// Place your react-ts workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"React Functional Component": {
		"scope": "javascript,typescript,typescriptreact",
		"prefix": "rtsx",
		"body": [
			"import React from \"react\";",
			"",
			"interface I${TM_FILENAME_BASE} {",
			"\tstyleProp?: IStyles",
			"}",
			"",
			"export const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = ({ styleProp }: I${TM_FILENAME_BASE}): JSX.Element => {",
			"\treturn (",
			"\t\t<div style={{...styles.root, ...styleProp}}>",
			"\t\t\t$0",
			"\t\t</div>",
			"\t);",
			"};",
			"",
			"const styles = {",
			"\troot: {",
			"\t\ttextAlign: \"center\"",
			"\t}",
			"} as IStyles;"
		],
		"description": "create a react functional component"
	}
}
